name: iNoteBook-Workflows
# when changes in branch automatic run jobs
on:
  push:
    branches:
      - main
jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      iNotebookbackend_change: ${{ steps.backend_change.outputs.iNotebookbackend }}
      iNotebookfrontend_change: ${{ steps.frontend_change.outputs.iNotebookfrontend }}
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
      
      - name: check for changes in backend
        id: backend_change
        uses: dorny/paths-filter@v3
        with:
          filters: |
           iNotebookbackend:
             - 'iNotebookbackend/**'

      - name: check for changes in frontend
        id: frontend_change
        uses: dorny/paths-filter@v3
        with:
          filters: |
            iNotebookfrontend:
              - 'iNotebookfrontend/**'


  backend:
    needs: check-changes
    runs-on: ubuntu-latest
    if: needs.check-changes.outputs.iNotebookbackend_change == 'true'
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v4
      - name: Creating Docker backend image 
        run: |
          docker buildx build -t ${{ secrets.DOCKER_BACKEND_IMAGE_NAME }} ./iNotebookbackend
      
      - name: Pushing Docker Image
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_BACKEND_IMAGE_NAME: ${{ secrets.DOCKER_BACKEND_IMAGE_NAME }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME  --password-stdin
          docker push $DOCKER_BACKEND_IMAGE_NAME  
          docker logout

      - name: SSH login and Deploy
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST_NAME: ${{ secrets.SSH_HOST_NAME }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DOCKER_BACKEND_IMAGE_NAME: ${{ secrets.DOCKER_BACKEND_IMAGE_NAME }}
          DOCKER_FRONTEND_IMAGE_NAME: abhisheksankhla121/i_notebook_frontend:latest
          REACT_APP_BACKEND_URL: https://inotebookbackend.fazalbazar.shop
          
        run: |
         sudo apt-get update -y
         sudo apt-get install -y sshpass
         sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST_NAME "
          export DOCKER_BACKEND_IMAGE_NAME=$DOCKER_BACKEND_IMAGE_NAME
          export DATABASE_URL=$DATABASE_URL
          export JWT_SECRET_KEY=$JWT_SECRET_KEY
          cd /home/testing
          docker pull \$DOCKER_BACKEND_IMAGE_NAME
          docker compose up -d --scale backend=4
          exit
         "


  frontend:
    needs: check-changes
    runs-on: ubuntu-latest
    if: needs.check-changes.outputs.iNotebookfrontend_change == 'true'
    steps:
      - name: Checkout Code 
        uses: actions/checkout@v4
        env: 
          DOCKER_FRONTEND_IMAGE_NAME: ${{ secrets.DOCKER_FRONTEND_IMAGE_NAME }}
          REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL }}
      - name: Creating docker frontend Image
        run: |
          cd iNotebookfrontend
          docker build --build-arg REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }} -t ${{ secrets.DOCKER_FRONTEND_IMAGE_NAME }} .


      - name: Pushing Docker Image
        env: 
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_FRONTEND_IMAGE_NAME: ${{ secrets.DOCKER_FRONTEND_IMAGE_NAME }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME  --password-stdin
          docker push abhisheksankhla121/i_notebook_frontend:latest
          docker logout

      - name: SSH login and Deploy
        env:
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_HOST_NAME: ${{ secrets.SSH_HOST_NAME }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          DOCKER_FRONTEND_IMAGE_NAME: ${{ secrets.DOCKER_FRONTEND_IMAGE_NAME }}
          REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sshpass
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST_NAME "
            export DOCKER_FRONTEND_IMAGE_NAME=abhisheksankhla121/i_notebook_frontend:latest
            export REACT_APP_BACKEND_URL=https://inotebookbackend.fazalbazar.shop
            cd /home/testing
            docker pull abhisheksankhla121/i_notebook_frontend:latest
            docker compose up -d --scale frontend=3
            exit
          "